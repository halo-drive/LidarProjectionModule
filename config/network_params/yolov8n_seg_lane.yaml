model:
  name: "yolov8n-seg-lane"
  type: "segmentation"
  framework: "onnx"  # Will convert to TensorRT

input:
  name: "images"
  shape: [1, 3, 416, 416]  # Based on ONNX model specs
  data_type: "FLOAT32"
  color_format: "RGB"
  normalization:
    mean: [0.485, 0.456, 0.406]  # ImageNet normalization
    std: [0.229, 0.224, 0.225]
    scale: 255.0

outputs:
  detection:
    name: "output0"
    shape: [1, 37, 3549]
    data_type: "FLOAT32"
    description: "Detection boxes and class scores"

  segmentation:
    name: "output1"
    shape: [1, 32, 104, 104]  # This is our lane mask output
    data_type: "FLOAT32"
    description: "Segmentation prototype masks"

inference:
  confidence_threshold: 0.5
  nms_threshold: 0.45
  max_detections: 100
  target_fps: 30

optimization:
  tensorrt:
    precision: "FP16"  # Start with FP16 for x86, will optimize later
    batch_size: 1
    workspace_size: 1073741824  # 1GB

postprocessing:
  lane_classes: [0]  # Assuming lane class ID is 0
  min_area: 100      # Minimum lane area in pixels
  morphology:
    kernel_size: 3
    iterations: 2
